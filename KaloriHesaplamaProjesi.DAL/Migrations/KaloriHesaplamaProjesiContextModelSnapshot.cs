// <auto-generated />
using System;
using KaloriHesaplamaProjesi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KaloriHesaplamaProjesi.DAL.Migrations
{
    [DbContext(typeof(KaloriHesaplamaProjesiContext))]
    partial class KaloriHesaplamaProjesiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KaloriHesaplamaProjesi.Entities.Concrete.Besin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("BesinAd")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Typname", "varchar");

                    b.Property<int>("BesinTurID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("BesinTurID");

                    b.ToTable("Besinler");
                });

            modelBuilder.Entity("KaloriHesaplamaProjesi.Entities.Concrete.BesinPorsiyonu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BesinID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Kalori")
                        .HasColumnType("float");

                    b.Property<double>("Karbonhidrat")
                        .HasColumnType("float");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PorsiyonID")
                        .HasColumnType("int");

                    b.Property<double>("Protein")
                        .HasColumnType("float");

                    b.Property<double>("Yag")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("BesinID");

                    b.HasIndex("PorsiyonID");

                    b.ToTable("BesinPorsiyonlari");
                });

            modelBuilder.Entity("KaloriHesaplamaProjesi.Entities.Concrete.BesinTur", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Type", "varchar");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("BesinTurleri");
                });

            modelBuilder.Entity("KaloriHesaplamaProjesi.Entities.Concrete.Kullanici", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Boy")
                        .HasColumnType("int")
                        .HasAnnotation("TypeName", "int");

                    b.Property<int>("Cinsiyet")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Kilo")
                        .HasColumnType("int")
                        .HasAnnotation("TypeName", "int");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(150)")
                        .HasAnnotation("TypeName", "varchar");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasAnnotation("TypeName", "varchar");

                    b.Property<int>("Yas")
                        .HasColumnType("int")
                        .HasAnnotation("TypeName", "int");

                    b.HasKey("ID");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("KaloriHesaplamaProjesi.Entities.Concrete.Porsiyon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PorsiyonAd")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasAnnotation("TypeName", "vchar");

                    b.HasKey("ID");

                    b.ToTable("Porsiyonlar");
                });

            modelBuilder.Entity("KaloriHesaplamaProjesi.Entities.Concrete.Tuketim", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<int>("BesinPorsiyonID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ogun")
                        .HasColumnType("int");

                    b.Property<DateTime>("TuketimTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("BesinPorsiyonID");

                    b.HasIndex("KullaniciID");

                    b.ToTable("Tuketimler");
                });

            modelBuilder.Entity("KaloriHesaplamaProjesi.Entities.Concrete.Besin", b =>
                {
                    b.HasOne("KaloriHesaplamaProjesi.Entities.Concrete.BesinTur", "BesinTur")
                        .WithMany("Besinler")
                        .HasForeignKey("BesinTurID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BesinTur");
                });

            modelBuilder.Entity("KaloriHesaplamaProjesi.Entities.Concrete.BesinPorsiyonu", b =>
                {
                    b.HasOne("KaloriHesaplamaProjesi.Entities.Concrete.Besin", "Besin")
                        .WithMany("BesinPorsiyonlari")
                        .HasForeignKey("BesinID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KaloriHesaplamaProjesi.Entities.Concrete.Porsiyon", "Porsiyon")
                        .WithMany("BesinPorsiyonlari")
                        .HasForeignKey("PorsiyonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Besin");

                    b.Navigation("Porsiyon");
                });

            modelBuilder.Entity("KaloriHesaplamaProjesi.Entities.Concrete.Tuketim", b =>
                {
                    b.HasOne("KaloriHesaplamaProjesi.Entities.Concrete.BesinPorsiyonu", "BesinPorsiyonu")
                        .WithMany("Tuketimler")
                        .HasForeignKey("BesinPorsiyonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KaloriHesaplamaProjesi.Entities.Concrete.Kullanici", "Kullanici")
                        .WithMany("Tuketimler")
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BesinPorsiyonu");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("KaloriHesaplamaProjesi.Entities.Concrete.Besin", b =>
                {
                    b.Navigation("BesinPorsiyonlari");
                });

            modelBuilder.Entity("KaloriHesaplamaProjesi.Entities.Concrete.BesinPorsiyonu", b =>
                {
                    b.Navigation("Tuketimler");
                });

            modelBuilder.Entity("KaloriHesaplamaProjesi.Entities.Concrete.BesinTur", b =>
                {
                    b.Navigation("Besinler");
                });

            modelBuilder.Entity("KaloriHesaplamaProjesi.Entities.Concrete.Kullanici", b =>
                {
                    b.Navigation("Tuketimler");
                });

            modelBuilder.Entity("KaloriHesaplamaProjesi.Entities.Concrete.Porsiyon", b =>
                {
                    b.Navigation("BesinPorsiyonlari");
                });
#pragma warning restore 612, 618
        }
    }
}
